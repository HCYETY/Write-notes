# 标签选择器(掌握)
1、-->根据指定的标签名称，在当前界面中找到所有该名称的标签，然后设置属性
2、格式：标签名称{
    属性：值；
}

# id选择器(掌握)
1、-->根据指定的id名称找到对应的标签，然后设置属性
2、格式：#id名称{
    属性：值；
}
3、注意点：每个HTML标签都有一个属性叫做id，也就是说每个标签都可以设置id
          在同一个界面中id的名称是不可以重复的
          在编写id选择器时一定要在id名称前加上#
          id名称是有一定规范的，只能有字母/数字/下划线，且不能以数字开头
          id名称不能是HTML标签的名称,如不能是a/hl/img/input...
          在企业开发中一般情况下如果仅仅为了设置样式，我们不会使用id，因为在前端开发中id是留给js使用的

# 类选择器(掌握)
1、-->根据指定的类（class）名称找到对应的标签，然后设置属性
2、格式：.类名{
    属性：值；
}
3、注意点：每个HTML标签都有一个属性叫做class，也就是说每个标签都可以设置类名
          在同一个界面中class的名称是可以重复的
          在编写class选择器时一定要在class名称前加上.
          类名的命名规范和id的命名规范一样
          类名就是专门用来给某个特定的标签设置样式的
          在HTML中每个标签可以同时绑定多个类名
                eg.格式：<标签名称 class="类名1 类名2 ...">
                    错误写法：<p class="para1" class="para2">

# id选择器和类选择器(理解)
1、id和class的区别：id相当于人的身份证不可重复，class相当于人的名称可以重复
                   一个HTML标签只能绑定一个id名称，却可以绑定多个class名称
2、id选择器和class选择器的区别：id选择器是以#开头，class选择器是以.开头
3、在企业开发中到底用id选择器还是class选择器：id选择器一般情况下是给js使用的，所以除非特殊情况，否则不要使用id选择器去设置样式
4、在企业开发中一个开发人员对类的使用可以看出这个开发人员的技术水平：一般情况下在企业开发中要注意冗余代码的抽取，可以将一些公共代码抽取到一个类选择器中，然后让标签和这个类选择器绑定即可

# 后代选择器(掌握)
1、-->找到指定标签的所有后代标签，设置属性
2、格式：标签名称1 标签名称2{
    属性：值；
}
    含义：先找到名称叫做标签名称1的标签，然后再在这个标签下面去查找所有名称叫做标签名称2的标签，然后再设置属性
3、注意点：后代选择器必须用空格隔开
          后代选择器不仅仅可以使用标签名称，还可以使用其他选择器

# 子元素选择器(掌握)
1、-->找到指定标签中所有特定的直接子元素，然后设置属性
2、格式：标签名称1>标签名称2{
    属性：值；

}
    含义：先找到名称叫做"标签名称1"的标签，然后在这个标签中查找所有直接子元素名称叫做"标签名称2"的元素
3、注意点：子元素选择器只会查找儿子，不会查找其他被嵌套的标签
          子元素信息准确之间需要使用>符号连接，并且不能有空格
          子元素选择器不仅仅可以使用标签名称，还可以使用其他选择器
          子元素选择器可以通过>符号一直选择下去

# 后代选择器和子元素选择器(理解)
1、后代选择器与子元素选择器之间的区别：
        后代选择器使用空格作为连接符号，子元素选择器使用>符号作为连接符号；
        后代选择器会选中指定标签中所有的特定后代标签（会选中儿子/孙子...），子元素选择器只会选中指定标签中所有的特定的直接标签（只会选中儿子）
2、后代选择器与子元素选择器之间的共同点：
        后代选择器和子元素选择器都可以使用标签名称/id名称/class名称来作为选择器
        后代选择器和子元素选择器都可以通过各自的连接符号一直延续下去
3、在企业开发中如何选择：
        如果想选中指定标签中的所有特定标签，那么就使用后代选择器；如果只想选中指定标签中的所有特定儿子标签，那么只选用子元素选择器

# 交集选择器(理解)
1、-->给所有选择器选中的标签中，相交的那部分标签添加属性
2、格式：选择器1选择器2{
    属性：值；
}
3、注意点：选择器和选择器之间没有任何连接符号
          交集选择器可以使用标签名称/id名称/class名称
          交集选择器仅仅作为了解，企业开发中用的并不多

# 并集选择器(掌握)
1、-->给所有选择器选中的标签设置属性
2、格式：选择器1，选择器2{
    属性：值；
}
3、注意点：并集选择器必须使用,来连接
          并集选择器可以使用标签名称/id名称/class名称
        
# 兄弟选择器(掌握)
1、相邻兄弟选择器 CSS2 -->给指定选择器后面紧跟的那个选择器选中的标签设置属性
        格式：选择器1+选择器2{
            属性：值；
        }
        注意点：相邻兄弟选择器必须通过+连接
                相邻兄弟选择器只能选中紧跟其后的那个标签，不能选中被隔开的标签
2、通用兄弟选择器 CSS3 -->给指定选择器后面的所有选择器选中的所有标签设置属性
        格式：选择器1~选择器2{
            属性：值；
        }
        注意点：通用兄弟选择器必须用~连接
                通用兄弟选择器选中的是指定选择器后面某个选择器选中的所有标签，无论有没有被隔开，都可以选中

# 序选择器(掌握)
1、CSS3中新增的选择器最具代表性的就是序选择器
        同级别的第几个： :first-child选中同级别中的第一个标签
                        :last-chlid选中同级别中的最后一个标签
                        :nth-child(n)选中同级别中的第n个标签
                        :nth-last-chlid（n）选中同级别中的倒数第n个标签
                        :only-child 选中父元素中唯一的元素
            注意点：三个都不区分类型   
        同类型的第几个： :first-of-type 选中同级别中同类型的第一个标签
                        :last-of-type 选中同级别中同类型的最后一个标签
                        :nth-of-type（n） 选中同级别中同类型的第n个标签
                        :nth-last-of-type(n) 选中同级别中同类型的倒数第n个标签
                        :only-of-type 选中父元素中唯一类型的某个标签
        :nth-child(odd) 选中同级别中的所有奇数
        :nth-child(even) 选中同级别中的所有偶数
        :nth-of-type(xn+y) x和y是用户自定义的

# 属性选择器(理解)
1、格式：[属性]-->根据指定的属性名称找到对应的标签，然后设置属性
        [属性= ]-->找到有指定属性，并且属性的取值等于 的标签，然后设置属性
2、属性的取值是以什么开头的：[attribution^=value] （[attribution|=value] CSS2）
        二者区别：CSS2中的只能找到value开头的，并且value是被-和其他内容隔开的
                 CSS3中的只要是以value的都能找的，无论有没有被-隔开
3、属性的取值是以什么结尾的：[attribution$=value]
4、属性的取值是否包含某个特定的值：[attribution*=value] （[attribution~=value] CSS2）
        二者区别：CSS2中的只能找到独立的单词，也就是包含value，并且value是被空格隔开的
                 CSS3中的只要包含value就都可以找到

# 通配符选择器(理解)
1、-->给当前界面上的所有标签设置属性
2、格式：*{
    属性：值；
}
3、注意点：由于通配符选择器是设置界面上的所有的标签的属性，所以在设置之前会遍历所有的标签，如果当前界面上的标签比较多，那么性能就会比较差，所以在企业开发中一般不会使用通配符选择器